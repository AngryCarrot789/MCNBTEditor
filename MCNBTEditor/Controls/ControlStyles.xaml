<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MCNBTEditor.Controls"
                    xmlns:ap="clr-namespace:MCNBTEditor.Controls.Helpers"
                    xmlns:acs="clr-namespace:MCNBTEditor.AdvancedContextService"
                    xmlns:nbt="clr-namespace:MCNBTEditor.Core.Explorer.NBT;assembly=MCNBTEditor.Core"
                    xmlns:inlines="clr-namespace:MCNBTEditor.NBT.UI.Inlines"
                    xmlns:ui="clr-namespace:MCNBTEditor.NBT.UI"
                    xmlns:regions="clr-namespace:MCNBTEditor.Core.Explorer.Regions;assembly=MCNBTEditor.Core"
                    xmlns:converters="clr-namespace:MCNBTEditor.Converters">
    <Style TargetType="{x:Type Run}" x:Key="NBTTagNameRunStyle">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="{x:Type Run}" x:Key="NBTTagValueRunStyle">
        <Setter Property="FontFamily" Value="Consolas"/>
    </Style>

    <!-- TODO: ??? not sure how to do this without using a style for each type of tag -->
    <Style x:Key="TagTooltipStyle" TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
    </Style>

    <inlines:NBTCollectionInlineHeaderConverter x:Key="NBTCollectionInlinesNameConverter" TagNameRunStyle="{StaticResource NBTTagNameRunStyle}" TagDataRunStyle="{StaticResource NBTTagValueRunStyle}"/>
    <inlines:NBTArrayInlineHeaderConverter      x:Key="NBTArrayInlinesNameConverter"      TagNameRunStyle="{StaticResource NBTTagNameRunStyle}" TagDataRunStyle="{StaticResource NBTTagValueRunStyle}"/>
    <inlines:NBTPrimitiveInlineHeaderConverter  x:Key="NBTPrimitiveInlinesNameConverter"  TagNameRunStyle="{StaticResource NBTTagNameRunStyle}" TagDataRunStyle="{StaticResource NBTTagValueRunStyle}"/>
    <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>

    <ui:TagIconConverter x:Key="TagIconConverter"
                         TagByte="/MCNBTEditor;component/Resources/Icons/FileIcon-TagByte8.png"
                         TagShort="/MCNBTEditor;component/Resources/Icons/FileIcon-TagShort16.png"
                         TagInt="/MCNBTEditor;component/Resources/Icons/FileIcon-TagInt32.png"
                         TagLong="/MCNBTEditor;component/Resources/Icons/FileIcon-TagLong64.png"
                         TagFloat="/MCNBTEditor;component/Resources/Icons/FileIcon-TagFloat32.png"
                         TagDouble="/MCNBTEditor;component/Resources/Icons/FileIcon-TagDouble64.png"
                         TagString="/MCNBTEditor;component/Resources/Icons/FileIcon-TagString.png"
                         TagList="/MCNBTEditor;component/Resources/Icons/icons8-bulleted-list-48.png"
                         TagByteArray="/MCNBTEditor;component/Resources/Icons/TagArrayIcon.png"
                         TagIntArray="/MCNBTEditor;component/Resources/Icons/TagArrayIcon.png"
                         TagLongArray="/MCNBTEditor;component/Resources/Icons/TagArrayIcon.png"
                         TagCompoundClosed="/MCNBTEditor;component/Resources/Icons/icons8-closed-box-48.png"
                         TagCompoundOpenEmpty="/MCNBTEditor;component/Resources/Icons/icons8-empty-box-48.png"
                         TagCompoundOpenFull="/MCNBTEditor;component/Resources/Icons/icons8-open-box-48.png"/>

    <Style TargetType="{x:Type controls:IconTextPair}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconTextPair}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                        <ContentPresenter Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" Content="{TemplateBinding Icon}" HorizontalAlignment="Left"/>
                        <TextBlock Text="{TemplateBinding Text}" Margin="4 0 0 0" HorizontalAlignment="Stretch"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="TreeRegionFileTemplate" DataType="{x:Type regions:RegionFileViewModel}" ItemsSource="{Binding Children}">
        <StackPanel Background="Transparent" Orientation="Horizontal" Height="18" IsEnabled="{Binding IsLoading, Converter={StaticResource InvertBoolConverter}}">
            <Image Width="16" Height="16" Source="/MCNBTEditor;component/Resources/Icons/FileIcon-Region.png"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTCollectionInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Children.Count"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="TreeTagCompoundTemplate" DataType="{x:Type nbt:TagCompoundViewModel}" ItemsSource="{Binding Children}">
        <StackPanel Background="Transparent" Orientation="Horizontal" Height="18">
            <Image x:Name="Img" Width="16" Height="16"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTCollectionInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Children.Count"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
        <HierarchicalDataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEmpty}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsExpanded}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Img" Property="Source" Value="/MCNBTEditor;component/Resources/Icons/icons8-empty-box-48.png"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEmpty}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsExpanded}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Img" Property="Source" Value="/MCNBTEditor;component/Resources/Icons/icons8-open-box-48.png"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsExpanded}" Value="False">
                <Setter TargetName="Img" Property="Source" Value="/MCNBTEditor;component/Resources/Icons/icons8-closed-box-48.png"/>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="TreeTagListTemplate" DataType="{x:Type nbt:TagListViewModel}" ItemsSource="{Binding Children}">
        <StackPanel Background="Transparent" Orientation="Horizontal" Height="18">
            <Image Width="16" Height="16" Source="/MCNBTEditor;component/Resources/Icons/icons8-bulleted-list-48.png"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTCollectionInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Children.Count"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="TreeTagArrayTemplate" DataType="{x:Type nbt:BaseTagArrayViewModel}">
        <StackPanel Background="Transparent" Orientation="Horizontal" Height="18">
            <Image Source="{Binding TagType, Converter={StaticResource TagIconConverter}}" Width="16" Height="16"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTArrayInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Data"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="TreeTagPrimitive" DataType="{x:Type nbt:TagPrimitiveViewModel}">
        <StackPanel Background="Transparent" Orientation="Horizontal" Height="18">
            <Image Source="{Binding TagType, Converter={StaticResource TagIconConverter}}" Width="16" Height="16"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTPrimitiveInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Data"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
    </HierarchicalDataTemplate>

    <!-- List entries -->

    <DataTemplate x:Key="ListRegionFileTemplate" DataType="{x:Type regions:RegionFileViewModel}">
        <StackPanel Background="Transparent" Orientation="Horizontal" Height="18"
                    IsEnabled="{Binding IsLoading, Converter={StaticResource InvertBoolConverter}}">
            <Image Width="16" Height="16" Source="/MCNBTEditor;component/Resources/Icons/FileIcon-Region.png"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTCollectionInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Children.Count"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ListTagCompoundTemplate" DataType="{x:Type nbt:TagCompoundViewModel}">
        <StackPanel Orientation="Horizontal" Height="18">
            <Image x:Name="Img" Width="16" Height="16"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTCollectionInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Children.Count"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                <Setter TargetName="Img" Property="Source" Value="/MCNBTEditor;component/Resources/Icons/icons8-empty-box-48.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEmpty}" Value="False">
                <Setter TargetName="Img" Property="Source" Value="/MCNBTEditor;component/Resources/Icons/icons8-closed-box-48.png"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ListTagListTemplate" DataType="{x:Type nbt:TagListViewModel}">
        <StackPanel Orientation="Horizontal" Height="18">
            <Image Width="16" Height="16" Source="/MCNBTEditor;component/Resources/Icons/icons8-bulleted-list-48.png"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTCollectionInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Children.Count"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ListTagArrayTemplate" DataType="{x:Type nbt:BaseTagArrayViewModel}">
        <StackPanel Orientation="Horizontal" Height="18">
            <Image Source="{Binding TagType, Converter={StaticResource TagIconConverter}}" Width="16" Height="16"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTArrayInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Data"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ListTagPrimitive" DataType="{x:Type nbt:TagPrimitiveViewModel}">
        <StackPanel Orientation="Horizontal" Height="18">
            <Image Source="{Binding TagType, Converter={StaticResource TagIconConverter}}" Width="16" Height="16"/>
            <TextBlock Margin="4 0 0 0">
                <ap:TextBlockHelper.BindableInlines>
                    <MultiBinding Converter="{StaticResource NBTPrimitiveInlinesNameConverter}">
                        <Binding Path="Name"/>
                        <Binding Path="Data"/>
                    </MultiBinding>
                </ap:TextBlockHelper.BindableInlines>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <ui:ExtendedTreeItemTemplateSelector x:Key="ExtendedTreeItemSelector">
        <ui:ExtendedTreeItemTemplateSelector.RegionFile>
            <StaticResource ResourceKey="TreeRegionFileTemplate"/>
        </ui:ExtendedTreeItemTemplateSelector.RegionFile>
        <ui:ExtendedTreeItemTemplateSelector.TagCompound>
            <StaticResource ResourceKey="TreeTagCompoundTemplate"/>
        </ui:ExtendedTreeItemTemplateSelector.TagCompound>
        <ui:ExtendedTreeItemTemplateSelector.TagList>
            <StaticResource ResourceKey="TreeTagListTemplate"/>
        </ui:ExtendedTreeItemTemplateSelector.TagList>
        <ui:ExtendedTreeItemTemplateSelector.TagArray>
            <StaticResource ResourceKey="TreeTagArrayTemplate"/>
        </ui:ExtendedTreeItemTemplateSelector.TagArray>
        <ui:ExtendedTreeItemTemplateSelector.TagPrimitive>
            <StaticResource ResourceKey="TreeTagPrimitive"/>
        </ui:ExtendedTreeItemTemplateSelector.TagPrimitive>
    </ui:ExtendedTreeItemTemplateSelector>

    <ui:ExtendedListItemTemplateSelector x:Key="ExtendedListItemSelector">
        <ui:ExtendedListItemTemplateSelector.RegionFile>
            <StaticResource ResourceKey="ListRegionFileTemplate"/>
        </ui:ExtendedListItemTemplateSelector.RegionFile>
        <ui:ExtendedListItemTemplateSelector.TagCompound>
            <StaticResource ResourceKey="ListTagCompoundTemplate"/>
        </ui:ExtendedListItemTemplateSelector.TagCompound>
        <ui:ExtendedListItemTemplateSelector.TagList>
            <StaticResource ResourceKey="ListTagListTemplate"/>
        </ui:ExtendedListItemTemplateSelector.TagList>
        <ui:ExtendedListItemTemplateSelector.TagArray>
            <StaticResource ResourceKey="ListTagArrayTemplate"/>
        </ui:ExtendedListItemTemplateSelector.TagArray>
        <ui:ExtendedListItemTemplateSelector.TagPrimitive>
            <StaticResource ResourceKey="ListTagPrimitive"/>
        </ui:ExtendedListItemTemplateSelector.TagPrimitive>
    </ui:ExtendedListItemTemplateSelector>

    <Style TargetType="{x:Type controls:ExtendedListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="ItemTemplateSelector" Value="{StaticResource ExtendedListItemSelector}"/>
        <Setter Property="SelectionMode" Value="Extended"/>
    </Style>

    <Style TargetType="{x:Type controls:ExtendedTreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
        <Setter Property="ItemTemplateSelector" Value="{StaticResource ExtendedTreeItemSelector}"/>
    </Style>

    <Style TargetType="{x:Type controls:ExtendedTreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}"/>
</ResourceDictionary>